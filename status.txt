Still in prototype status

https://en.wikipedia.org/wiki/List_of_datasets_for_machine-learning_research 

Todo:
=====



Here ML or Media?
https://code.mpimet.mpg.de/projects/cdo/embedded/index.html#x1-40001.1.1
apt-get install cdo
https://code.mpimet.mpg.de/attachments/download/27273/python_cdo_introduction.pdf
https://www.unidata.ucar.edu/software/netcdf
https://proj.org/en/9.5/




https://www.r-bloggers.com/2024/07/shockingly-fast-data-manipulation-in-r-with-polars/

Complex:
https://keras-complex.readthedocs.io/

Python Compiler:
https://dl.acm.org/doi/abs/10.1145/3578360.3580275
https://github.com/exaloop/codon
https://docs.exaloop.io/codon/

ML-Compiler
https://github.com/microsoft/hummingbird
https://github.com/BayesWitnesses/m2cgen

Transformers:
https://pypi.org/project/transformers/
pip install transformers
https://huggingface.co/transformers/installation.html
https://www.kdnuggets.com/2021/02/hugging-face-transformer-basics.html
https://towardsdatascience.com/electra-is-bert-supercharged-b450246c4edb
https://huggingface.co/transformers/model_doc/electra.html
https://huggingface.co/blog/long-range-transformers

SparkNlp
https://towardsdatascience.com/running-spark-nlp-in-docker-container-for-named-entity-recognition-and-other-nlp-features-8acdb662da5b
https://nlp.johnsnowlabs.com/docs/en/install
https://morioh.com/p/49d876460bc4
https://www.dagshub.com/MiguelPeralvo/spark-nlp-workshop
https://github.com/JohnSnowLabs/spark-nlp/discussions/1714
https://pythonrepo.com/repo/JohnSnowLabs-spark-nlp-python-natural-language-processing
https://github.com/microsoft/SynapseML

Tree:
https://github.com/microsoft/LightGBM
https://github.com/IQVIA-ML/LightGBM.jl
https://github.com/MAIF/shapash


https://docs.jax.dev/en/latest/



https://blog.tensorflow.org/2020/08/train-your-tensorflow-model-on-google.html?linkId=95907203

https://towardsdatascience.com/creating-editing-and-merging-onnx-pipelines-897e55e98bb0


https://github.com/tensorflow/tensorflow/tree/master/tensorflow/tools/dockerfiles/dockerfiles
https://www.tensorflow.org/install/lang_c
https://www.tensorflow.org/install

https://spark.apache.org/docs/3.1.1/api/python/getting_started/install.html

https://prodi.gy ??


https://wiki.ubuntuusers.de/tesseract-ocr/

https://ui.neptune.ai
#  export NEPTUNE_API_TOKEN="abc"

## CODE -> file
import neptune

# The init() function called this way assumes that
# NEPTUNE_API_TOKEN environment variable is defined.

neptune.init('kmicha/sandbox')
neptune.create_experiment(name='minimal_example')

# log some metrics

for i in range(100):
    neptune.log_metric('loss', 0.95**i)

neptune.log_metric('AUC', 0.96)
##

https://www.kdnuggets.com/beginners-guide-to-data-cleaning-with-pyjanitor
https://pypi.org/project/pyjanitor/

https://www.kdnuggets.com/11-python-libraries-every-ai-engineer-should-know
https://www.kdnuggets.com/creating-automated-data-cleaning-pipelines-using-python-and-pandas
https://www.kdnuggets.com/2025/02/nettresults/30-must-know-tools-for-python-development
